<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_system_yellow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var menutheme = 0; 
var date = date_current_datetime();
if (date_get_month(date) = 9 and date_get_day(date) = 22) or 
    date_get_month(date) = 3 and (date_get_day(date) = 13 or date_get_day(date) = 24)
    {menutheme = "DS"}
switch(menutheme)
{   default: { //Default
    space = 64;
    mpos = 0;
    }break;
    case "DS": { //DS
    space = 64;
    mpos = 0;
    }break;
}

menustart[0] = "Play";
menustart[1] = "Options";
menustart[2] = "Tournament"
menustart[3] = "Quit"

menuoption[0] = "Fullscreen"
menuoption[1] = "Sound"

enum menu{
    start,
    option
}

setting = menu.start;

device = 0;

//***TEMPORARY CODE***//
gamepad_set_axis_deadzone(device, 0.2);
//********************//

scr_input_zero();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Run alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mb_any or scr_mouse_moving(){
    var input = 0;
}
if vk_anykey or scr_controller_using(){
    var input = 1;
}

switch(input){
    case 0:{break;}
    case 1:{
        scr_input_shift();
        
        var movey = inp_d[1] - inp_d[3] - sign(inp_yattack) - sign(inp_xmove);
        if movey != 0 and alarm[11] = -1 {
            alarm[11] = room_speed * 0.075
            mpos -= movey;
            if (mpos &lt; 0) mpos = array_length_1d(menustart) - 1;
            if (mpos &gt; array_length_1d(menustart) - 1) mpos = 0;
        }
        
        break;
    }
}

var enter = max(inp_b[3]);

if enter {
    switch(setting){
    
    case menu.start: switch(menustart[mpos])
        {   case "Play": break;
            case "Options": setting = menu.option break;
            case "Tournament": break;
            case "Quit": game_end(); break;
        }break;
    
    case menu.option: switch(mpos)
        {   case 0: break;
            case 1: break;
        }break;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(font0);
draw_set_color(c_white);
var menupage
var m = 0;

switch(setting){
    case menu.start: menupage = string(menustart[m]);
    case menu.option: menupage = string(menuoption[m]);
}

for ( m = 0; m &lt; array_length_1d(menupage) m++ )
    {draw_text(x + space, y + (m * space),string(menupage))}
    
draw_sprite(sprite_index, 0 , x + 16, y + mpos * space);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
